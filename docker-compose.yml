version: "3.9"

services:
  oracle:
    image: gvenzl/oracle-xe:21-slim
    container_name: oracle-xe
    ports:
      - "1521:1521"   # Oracle listener
      - "5500:5500"   # EM Express (optional)
    environment:
      ORACLE_PASSWORD: ${ORACLE_PWD:-oracle}
      APP_USER: ${ORACLE_APP_USER:-APPUSER}
      APP_USER_PASSWORD: ${ORACLE_APP_PWD:-apppwd}
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./oracle/schema:/opt/sql
    healthcheck:
      test: ["CMD-SHELL", "echo 'SELECT 1 FROM dual;' | sqlplus -s SYSTEM/${ORACLE_PWD:-oracle}@localhost:1521/XEPDB1 || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 20
    restart: unless-stopped

  # Single-node Kafka in KRaft mode (no ZooKeeper)
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9094:9094"   # host access (EXTERNAL listener)
    environment:
      # Enable KRaft (no ZooKeeper)
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093

      # Listeners: internal (PLAINTEXT), external (EXTERNAL), and controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9094,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

      # Single-broker-safe defaults
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=3
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 20
    restart: unless-stopped

  # Kafka Connect with Debezium + Oracle JDBC
  connect:
    image: quay.io/debezium/connect:2.6
    container_name: connect
    ports:
      - "8083:8083"   # Kafka Connect REST
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status

      # JSON converters (Spark-friendly)
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"

      # (Optional) enable scripting SMTs if you ever need them
      ENABLE_DEBEZIUM_SCRIPTING: "true"
    volumes:
      # Put your Oracle JDBC driver here (required by Debezium Oracle connector)
      - ./connect-lib/ojdbc8.jar:/kafka/libs/ojdbc8.jar:ro
    depends_on:
      oracle:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8083/connectors || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 20

volumes:
  oracle-data:
  kafka-data:
